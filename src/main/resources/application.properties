# PROJECT
server.version = 0.0.1
server.servlet.context-path=/v1

# SERVER
server.compression.enabled = true
server.compression.mime-types: application/json,text/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
spring.profiles.active = dev
#spring.profiles.active = prod
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.time-zone=America/Sao_Paulo
server.defaultLocale = pt-BR
spring.data.mongodb.auto-index-creation=true
server.jwt.secretKey = ${SECRET_KEY}



## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
#spring.servlet.multipart.file-size-threshold=1MB
#spring.servlet.multipart.max-file-size=20MB
#spring.servlet.multipart.max-request-size=50MB



# LOGGGING
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=ERROR
logging.level.org.springframework.security.web=WARN
logging.level.com.auth0=WARN



# BUCKET4J
spring.cache.cache-names[0] = rate-limit-buckets
spring.cache.caffeine.spec= = maximumSize=100000,expireAfterAccess=3600s

bucket4j.enabled = true
bucket4j.filters[0].cache-name = rate-limit-buckets
bucket4j.filters[0].url = .*
bucket4j.filters[0].strategy = first
bucket4j.filters[0].http-response-body = "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"

bucket4j.filters[0].rate-limits[0].expression = getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity = 10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time = 1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit = seconds

bucket4j.filters[0].rate-limits[1].expression = getHeader('Authorization')
bucket4j.filters[0].rate-limits[1].bandwidths[0].capacity = 10
bucket4j.filters[0].rate-limits[1].bandwidths[0].time = 1
bucket4j.filters[0].rate-limits[1].bandwidths[0].unit = seconds

bucket4j.filters[0].rate-limits[2].expression = getRemoteAddr()
bucket4j.filters[0].rate-limits[2].bandwidths[0].capacity = 100
bucket4j.filters[0].rate-limits[2].bandwidths[0].time = 1
bucket4j.filters[0].rate-limits[2].bandwidths[0].unit = minutes

bucket4j.filters[0].rate-limits[3].expression = getHeader('Authorization')
bucket4j.filters[0].rate-limits[3].bandwidths[0].capacity = 100
bucket4j.filters[0].rate-limits[3].bandwidths[0].time = 1
bucket4j.filters[0].rate-limits[3].bandwidths[0].unit = minutes


#CONFIGS
config.simple.password = false
config.activation.by.email.is.required = true
config.activate.sendgrid = false